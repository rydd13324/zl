【远程代码】

--
-- @author 寒歌
-- @description Main是应用的主模块，其中注册了应用运行中UI事件的回调、Activity生命周期的回调等
-- 你也可以在此编写启动事件代码，或控制应用运行逻辑、自定义应用UI等等。
-- @other 本模版已为你编写好基础事件，建议在阅读注释并理解相关参数意义后再进行扩展编写
--

--
-- @author 寒歌
-- @description Main是应用的主模块，其中注册了应用运行中UI事件的回调、Activity生命周期的回调等
-- 你也可以在此编写启动事件代码，或控制应用运行逻辑、自定义应用UI等等。
-- @other 本模版已为你编写好基础事件，建议在阅读注释并理解相关参数意义后再进行扩展编写
--

-- ****默认导入包****
require "import"
import "android.os.*"
import "android.widget.*"
import "android.view.*"
-- ****不需要请删除****

import "androidx.recyclerview.widget.RecyclerView"
import "androidx.recyclerview.widget.LinearLayoutManager"
import "android.graphics.Color"
import "android.widget.TextView"
import "android.widget.LinearLayout"
import "androidx.cardview.widget.CardView"
import "com.androlua.LuaRecyclerAdapter"
import "android.graphics.Color"
import"com.scwang.smartrefresh.layout.SmartRefreshLayout"

-- @param data 侧滑栏列表的全部数据
-- @param recyclerView 侧滑栏列表控件
-- @param listIndex 点击的列表索引（点击的是第几个列表）
-- @param clickIndex 点击的项目索引（点击的第几个项目）
function onDrawerListItemClick(data, recyclerView, listIndex, itemIndex)
  --侧滑栏列表的数据是二维结构，所以需要先获取到点击项目所在列表的数据
  local listData = data.get(listIndex);
  --获取到所在列表的数据后获取点击项目的数据
  local itemData = listData.get(itemIndex);
  --最后获取到点击的项目的标题
  local itemTitle = itemData.getTitle();

  --TODO：
  print(itemTitle)
end

activity.overridePendingTransition(android.R.anim.fade_in,android.R.anim.fade_out)

布局=

{
  LinearLayout,
  orientation='vertical';--横向或者纵向布局
  layout_width='fill';--布局宽度
  layout_height='fill';--布局高度
  background='';--布局背景颜色
  {
    LinearLayout,--线性布局
    orientation='vertical',--方向
    layout_width='fill',--宽度
    layout_height='wrap',--高度
    background='#ffffffff',--背景颜色或图片路径
    {
      LinearLayout,--线性布局
      orientation='horizontal',--方向
      layout_width='fill',--宽度
      layout_height='fill',--高度
      background='',--背景颜色或图片路径
      {
        LinearLayout,--线性布局
        orientation='vertical',--方向
        layout_width='40%w',--宽度
        layout_height='fill',--高度
        --background='#FFF44336',--背景颜色或图片路径
        {
          TextView;--文本控件
          layout_width='fill';--文本宽度
          layout_height='fill';--文本高度
          gravity='center|left';--重力属性
          textColor='#ff000000';--文字颜色
          text='肉肉世界';--显示的文字
          textSize='20sp';--文字大小
          layout_marginLeft="10dp";
          --textStyle="bold",
        };
        --文本
      };
      --左边
      {
        LinearLayout,--线性布局
        orientation='vertical',--方向
        layout_width='40%w',--宽度
        layout_height='fill',--高度
        --background='#FFF44336',--背景颜色或图片路径
        {
          TextView;--文本控件
          layout_width='fill';--文本宽度
          layout_height='fill';--文本高度
          gravity='center|left';--重力属性
          textColor='#ff000000';--文字颜色
          text='';--显示的文字
          textSize='15sp';--文字大小
          layout_marginLeft="10dp";
          --textStyle="bold",
          id="shu";
        };
        --文本
      };
      --左边
      {
        LinearLayout,--线性布局
        orientation='vertical',--方向
        layout_width='20%w',--宽度
        layout_height='fill',--高度
        background='',--背景颜色或图片路径
        {
          LinearLayout,--线性布局
          orientation='horizontal',--方向
          layout_width='fill',--宽度
          layout_height='fill',--高度
          background='',--背景颜色或图片路径
          {
            CardView;--卡片控件
            layout_margin='8dp';--边距
            layout_gravity='center';--重力
            --左:left 右:right 中:center 顶:top 底:bottom
            elevation='0dp';--阴影
            layout_width='fill';--宽度
            layout_height='fill';--高度
            CardBackgroundColor='#FFF5F6F8';--颜色
            radius='10dp';--圆角
            {
              ImageView;--图片控件
              src='history.png';--图片路径
              layout_width='20dp';--图片宽度
              layout_height='20dp';--图片高度
              --scaleType='fitXY';--图片显示类型
              layout_gravity="center|left";
              layout_margin="8dp";
              id="ls";
            };
            --左图
            {
              TextView;--文本控件
              layout_width='fill';--文本宽度
              layout_height='fill';--文本高度
              gravity='center';--重力属性
              textColor='#ff000000';--文字颜色
              text='|';--显示的文字
              textSize='18sp';--文字大小
            };
            --文本分割
            {
              ImageView;--图片控件
              src='home1.png';--图片路径
              layout_width='20dp';--图片宽度
              layout_height='20dp';--图片高度
              --scaleType='fitXY';--图片显示类型
              layout_gravity="center|right";
              layout_margin="8dp";
              id="tc";
            };
            --右图
          };
          --卡片
        };
        --横向
      };
      --右边1

      --右边2
    };
    --横向
  };
  --线性

  {
    LinearLayout,
    orientation='vertical';--横向或者纵向布局
    layout_width='fill';--布局宽度
    layout_height='fill';--布局高度
    background='';--布局背景颜色
    {
      SmartRefreshLayout;
      id="刷新";
      layout_width='match_parent';
      layout_height='match_parent';
      EnableRefresh=false;--下拉刷新
      EnableLoadMore=true;--上拉加载
      {
        RecyclerView,
        id="recycler_view",
        layout_width="fill",
        layout_height="wrap",
        padding="0dp";
      };
    };
  };

};
activity.setContentView(loadlayout(布局))



list_item={
  LinearLayout,
  orientation='vertical';--横向或者纵向布局
  layout_width='fill';--布局宽度
  layout_height='wrap';--布局高度
  background='';--布局背景颜色
  {
    CardView;--卡片控件
    layout_margin='8dp';--边距
    layout_gravity='center';--重力
    --左:left 右:right 中:center 顶:top 底:bottom
    elevation='0dp';--阴影
    layout_width='fill';--宽度
    layout_height='wrap';--高度
    CardBackgroundColor='#FFF1F2F4';--颜色
    radius='8dp';--圆角
    {
      LinearLayout,--线性布局
      orientation='vertical',--方向
      layout_width='fill',--宽度
      layout_height='fill',--高度
      background='',--背景颜色或图片路径
      {
        LinearLayout,--线性布局
        orientation='vertical',--方向
        layout_width='fill',--宽度
        layout_height='wrap',--高度
        background='',--背景颜色或图片路径
        layout_margin="10dp";
        {
          TextView;--文本控件
          layout_width='fill';--文本宽度
          layout_height='wrap';--文本高度
          gravity='center|left';--重力属性
          textColor='#ff000000';--文字颜色
          text='保安和搬运工的故事';--显示的文字
          textSize='20sp';--文字大小
          id="bt";
          textStyle="bold",
        };
        --标题
      };
      --上
      {
        LinearLayout,--线性布局
        orientation='vertical',--方向
        layout_width='fill',--宽度
        layout_height='wrap',--高度
        background='',--背景颜色或图片路径
        layout_margin="0dp";

        {
          TextView;--文本控件
          text='';--显示的文字
          id="lj";
          layout_width='0dp';--文本宽度
          layout_height='0dp';--文本高度
        };
      };
      --下
    };
    --总线性
  };
  --卡片
};



activity.window.statusBarColor=Color.parseColor("#03DAC5")

--设置线性列表布局
recycler_view.layoutManager=LinearLayoutManager(activity)
--recycler_view.layoutManager=GridLayoutManager(activity,3)--3为网格行数
recycler_view.layoutManager.setOrientation(1)--0是横向，1是竖向
--网格列表视图
--recycler_view.layoutManager=StaggeredGridLayoutManager(3,StaggeredGridLayoutManager.HORIZONTAL)--3为网格行数,可换HORIZONTAL
--瀑布流列表视图
local adapter=LuaRecyclerAdapter(activity,xsdata,list_item)
--设置点击事件控件id,如果没有，则默认给列表项目父布局设置事件
--这里因为要给卡片控件设置事件，所以指定id为"card"
adapter.clickViewId="card"
--设置适配器
recycler_view.adapter=adapter



module("Base64", package.seeall)
--Android Base64编码工具类
--把文件复制到工程目录 or 把函数复制到你想要的地方
function encode(data)--编码
  local Base64=luajava.bindClass("android.util.Base64")
  return Base64.encodeToString(String(data).getBytes(),Base64.NO_WRAP);
end
function decode(data)--解码
  local Base64=luajava.bindClass("android.util.Base64")
  return String(Base64.decode(data,Base64.DEFAULT)).toString()
end


import"cjson"
url="https://wds.ecsxs.com/221832.json"
--ua="Mozilla/5.0 (Linux；； Android 11；； Mi 10 Pro) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.152 Mobile Safari/537.36"
Http.get(url,function(code,content,ua)

  if code==200 and content then
    json=cjson.decode(content)




    表={}

    for i=1,#json.links do

      table.insert(表,json.links[i])

    end

    shu.setText("当前资源数:"..#表)
    for k,v in ipairs(表) do

      名字=decode(v.name)
      章节=v.name
      内容=decode(v.content)

      adapter.add{
        bt=名字,
        lj=内容
      }


    end
    刷新.getRefreshFooter().setAnimatingColor(0xFF73ABFE)
  end
end)




function 写入文件(路径,内容)
  import "java.io.File"
  f=File(tostring(File(tostring(路径)).getParentFile())).mkdirs()
  io.open(tostring(路径),"w"):write(tostring(内容)):close()
end





adapter.onItemClick=function(
  adapter,--适配器对象
  itemView,--项目布局对象
  view,--点击的控件对象
  pos--点击的位置索引
  )

  itemData = adapter.Data[pos+1]




  名字=itemData.bt
  内容=itemData.lj

  --print(名字)
  value="A"..名字.."A".."B"..内容.."B"
  --  print(value)
  写入文件("sdcard/zhongle/yuedu/xsmxs.txt",名字)
  写入文件("sdcard/zhongle/yuedu/"..名字.."xsmxs.txt",value)
  写入文件("sdcard/zhongle/yuedu/xsmxsmz.txt",名字)
  进入子页面("xsmyd",{value})



end



刷新.setFooterHeight(45)--.setFooterHeight(1)
.setEnableAutoLoadMore(true)
.setOnRefreshLoadMoreListener({
  onLoadMore=function(view)

    task(2000,function()
      print("加载完成")
      刷新.finishLoadMore()
    end)
  end})



tc.onClick=function()

  退出页面()

end

ls.onClick=function()
进入子页面("xsmls")  
  
  end
【远程代码】
